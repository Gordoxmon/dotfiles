
# ---------- Oh My Zsh ----------
export ZSH="$HOME/.oh-my-zsh"
ZSH_THEME="agnoster"

plugins=(
  git
  zsh-autosuggestions
  fast-syntax-highlighting
  zsh-autocomplete
)

source $ZSH/oh-my-zsh.sh

# ---------- Helpers ----------
# Add a dir to PATH if it exists and isn't already there
path_add_if_exists() {
  local d="$1"
  [[ -d "$d" ]] && [[ ":$PATH:" != *":$d:"* ]] && PATH="$d:$PATH"
}

# Source a file only if it exists and is readable
safe_source() { [[ -r "$1" ]] && source "$1"; }

# Check if a command exists
has() { command -v "$1" >/dev/null 2>&1; }

# Keep PATH unique
typeset -gU PATH

# ---------- Micromamba ----------
if has micromamba || [[ -x "/usr/bin/micromamba" ]]; then
  export MAMBA_EXE="${MAMBA_EXE:-/usr/bin/micromamba}"
  export MAMBA_ROOT_PREFIX="${MAMBA_ROOT_PREFIX:-$HOME/.local/share/mamba}"
  if __mamba_setup="$("$MAMBA_EXE" shell hook --shell zsh --root-prefix "$MAMBA_ROOT_PREFIX" 2>/dev/null)"; then
    unalias mamba 2>/dev/null   # avoid alias→function conflict
    eval "$__mamba_setup"
  else
    alias micromamba="$MAMBA_EXE"
  fi
  unset __mamba_setup
fi

# ---------------- Node.js (NVM + Yarn) ----------------
export NVM_DIR="$HOME/.nvm"

# Load NVM if available
safe_source "$NVM_DIR/nvm.sh"
safe_source "$NVM_DIR/bash_completion"

# If Node is installed, set up environment
if has node; then
  # Ensure NVM’s Node bin dirs are in PATH (critical for corepack/yarn)
  node_bin_dir="$(dirname "$(command -v node 2>/dev/null)")"
  path_add_if_exists "$node_bin_dir"

  # Use Node 24 if installed via NVM
  if has nvm && nvm list 24 >/dev/null 2>&1; then
    nvm use 24 >/dev/null
  fi

  # Enable Corepack if available (ensures Yarn & pnpm work)
  if has corepack; then
    corepack enable >/dev/null 2>&1
  fi

  # Ensure npm global bin is in PATH
  npm_prefix="$(npm config get prefix 2>/dev/null)"
  if [[ -n "$npm_prefix" ]]; then
    path_add_if_exists "$npm_prefix/bin"
  fi

  # Add Yarn global bin (for legacy setups)
  path_add_if_exists "$HOME/.yarn/bin"

  # Print versions once per session
  if [ -z "$_NODE_ENV_SETUP_DONE" ]; then
    export _NODE_ENV_SETUP_DONE=1
  fi
fi

# ---------- PHPEnv ----------
if [[ -d "$HOME/.phpenv" ]]; then
  export PHPRC="$HOME/.phpenv"
  path_add_if_exists "$HOME/.phpenv/bin"
  if has phpenv; then
    eval "$(phpenv init -)"
  fi
fi

# ---------- PHPEnv ----------
if [[ -d "$HOME/.phpenv" ]]; then
  export PHPRC="$HOME/.phpenv"
  path_add_if_exists "$HOME/.phpenv/bin"
  if has phpenv; then
    eval "$(phpenv init -)"
  fi
fi

# ---------- Go ----------
path_add_if_exists "/usr/local/go/bin"

# ---------- Composer (local vendor bin etc.) ----------
path_add_if_exists "$HOME/.local/bin"

# ---------- SSH agent (Bitwarden) ----------
if [[ -S "$HOME/.bitwarden-ssh-agent.sock" ]]; then
  export SSH_AUTH_SOCK="$HOME/.bitwarden-ssh-agent.sock"
fi

# ---------- Zsh Completion UI tweaks ----------
zstyle ':completion:*' list-lines 10
zstyle ':completion:*' menu select=10
zstyle ':autocomplete:menu:*' max-lines 10

# ---------- Shell behavior tweaks ----------
setopt autocd              # cd into directories by typing their name
setopt histignoredups      # ignore duplicate history entries
setopt sharehistory        # share history across sessions
setopt correct_all          # auto-correct command typos

# ---------- Aliases ----------
has pacman && alias pacman="sudo pacman"
has yay && alias sysUpdate="yay -Syyu --noconfirm"
has poweroff && alias chonar="poweroff"
has eza && alias ls="eza -G --icons"
has bat && alias cat="bat"
has nvim && alias nvimConf="cd ~/.config/nvim && nvim init.lua"
has kitty && alias kittyConf="cd ~/.config/kitty && nvim kitty.conf"

# ---------- Starship ----------
has starship && eval "$(starship init zsh)"

# ---------- SDKMAN ----------
export SDKMAN_DIR="$HOME/.sdkman"
safe_source "$SDKMAN_DIR/bin/sdkman-init.sh"

# ---------- Language / Locale ----------
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8

# ---------- Editor ----------
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='vim'
else
  export EDITOR='nvim'
fi

# ---------- PATH sanity check ----------
path_add_if_exists "$HOME/bin"
path_add_if_exists "$HOME/.local/bin"
path_add_if_exists "/usr/local/bin"
path_add_if_exists "$HOME/Projects/Personal/scripts"
path_add_if_exists "$HOME/.nvm/versions/node/v24.10.0/bin"
